buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-cargo-plugin:2.2.3'
    }
}

plugins {
  id "org.sonarqube" version "2.5"
}

allprojects{
	
	ext.commonsLangVersion = "3.4"
    ext.javaVersion = "1.7"
    ext.jeeApiVersion = "6.0"
    ext.logbackVersion = "1.1.3"
    ext.springFrameworkVersion = "4.3.4.RELEASE"
    ext.springSecurityVersion = "4.1.3.RELEASE"
    ext.servletApiVersion = "3.1.0"
    ext.jstlVersion = "1.2"
    ext.jspApiVersion = "2.1"
    ext.mockitoVersion = "2.0.8-beta"
    ext.junitVersion = "4.12"
    ext.slf4jVersion = "1.7.12"
    ext.jacksonVersion = "2.6.1"
    ext.thymeleafVersion = "3.0.3.RELEASE" 
    ext.thymeleafVersionExtra = "3.0.2.RELEASE" 
    ext.javaFacetVersion = javaVersion
    ext.javascriptFacetVersion = "1.0"
    ext.jeeFacetVersion = jeeApiVersion
    ext.webModuleFacetVersion = "3.0"
    ext.hazelcastVersion = "3.7.3"
    ext.springSession = "1.3.0.RELEASE"
	
	apply plugin: 'java'
	apply plugin: 'eclipse'
	apply plugin: "jacoco"
	
	sourceCompatibility = JavaVersion.VERSION_1_7
	targetCompatibility = JavaVersion.VERSION_1_7
	version = '0.0.1'
	
}

subprojects{
	repositories {
		mavenLocal()
	    jcenter()
	}
}

configurations.all {
    resolutionStrategy {
        force 'xml-apis:xml-apis:1.4.01'
    }
}

project(':crud-project-services'){
	apply plugin: 'war'
	
	dependencies {
		providedCompile "javax.servlet:jstl:${jstlVersion}"        
        providedCompile "javax.servlet:javax.servlet-api:${servletApiVersion}"
        providedCompile "javax.servlet.jsp:jsp-api:${jspApiVersion}"
			
		compile ("ch.qos.logback:logback-classic:${logbackVersion}")
		compile ("org.slf4j:slf4j-api:${slf4jVersion}")
		compile ("org.slf4j:jcl-over-slf4j:${slf4jVersion}")
		
		compile ("org.springframework:spring-core:${springFrameworkVersion}")
		compile ("org.springframework:spring-web:${springFrameworkVersion}")
		compile ("org.springframework:spring-aop:${springFrameworkVersion}")
		compile ("org.springframework:spring-jdbc:${springFrameworkVersion}")
		
		compile "commons-io:commons-io:2.5"
		compile("org.mybatis:mybatis-spring:1.2.2")
		compile("org.mybatis:mybatis:3.2.7")
		
		compile ("org.apache.commons:commons-lang3:3.0")
		compile "org.hibernate:hibernate-validator:5.4.1.Final"
		compile ("org.apache.poi:poi:3.9")
		compile ("pe.com.comtecsis:crud-ws-login:1.0")
		testCompile ("junit:junit:${junitVersion}")	
	}
	
}

project(':crud-project-web'){
	apply plugin: 'war'
	apply plugin: 'com.bmuschko.cargo'
	
	dependencies {
    	def cargoVersion = '1.4.5'
    	cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
	          "org.codehaus.cargo:cargo-ant:$cargoVersion"
        /// ------- 	
    	
        compile "javax.servlet:jstl:${jstlVersion}"        
        providedCompile "javax.servlet:javax.servlet-api:${servletApiVersion}"
        //compile "javax.servlet.jsp:jsp-api:${jspApiVersion}"
    
    	compile "org.apache.commons:commons-lang3:${commonsLangVersion}"  
        compile "ch.qos.logback:logback-classic:${logbackVersion}"
        compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
        compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"        
        compile "org.slf4j:jcl-over-slf4j:${slf4jVersion}"
        compile "org.slf4j:slf4j-api:${slf4jVersion}"
                
        compile "org.springframework:spring-context-support:${springFrameworkVersion}"
        compile "org.springframework:spring-webmvc:${springFrameworkVersion}"
        compile "org.springframework:spring-jdbc:${springFrameworkVersion}"
        compile "org.springframework:spring-tx:${springFrameworkVersion}"
                
        compile "org.springframework.session:spring-session:${springSession}"        
        compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
		compile "org.springframework.security:spring-security-config:${springSecurityVersion}"		
		compile ("org.springframework.security.extensions:spring-security-saml2-core:1.0.2.RELEASE")
				        
        compile "org.thymeleaf:thymeleaf:${thymeleafVersion}" 
        compile "org.thymeleaf:thymeleaf-spring4:${thymeleafVersion}"    
        compile "org.thymeleaf.extras:thymeleaf-extras-springsecurity4:${thymeleafVersionExtra}"        
        //compile "com.hazelcast:hazelcast-client:${hazelcastVersion}"   
          
        //compile 'com.c05mic.generictree:GenericN-aryTree:1.1.1'
		compile "commons-io:commons-io:2.5"
		compile("org.mybatis:mybatis-spring:1.2.2")
		compile("org.mybatis:mybatis:3.2.7")
		//compile group: 'org.apache.ibatis', name: 'ibatis-core', version: '3.0'
		
		//compile group: 'commons-configuration', name: 'commons-configuration', version: '1.6'
		compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.2.2'
		compile group: 'org.springmodules', name: 'spring-modules-jakarta-commons', version: '0.8a'
		
		compile group: 'postgresql', name: 'postgresql', version: '9.0-801.jdbc4'
		        
        testCompile "junit:junit:${junitVersion}"
        testCompile "org.mockito:mockito-core:${mockitoVersion}"
        testCompile "org.springframework:spring-test:${springFrameworkVersion}"
	}
	war {
	    archiveName 'crud-project-web.war'
	    manifest {
	        attributes("Implementation-Title": project.name, "Implementation-Version": version, "Implementation-Timestamp": new Date())
	    }
	}

	cargo {
	    containerId = 'tomcat8x'
	    port = 8888

	    deployable {
			context = 'myawesomewebapp'
	    }

	    remote {
			hostname = '192.168.0.5'
			username = 'tomcat'
			password = 'tomcat'
	    }

	    local {
		homeDir = file('/home/leonardo/workspace/crud-project-web-app/crud-project-web/build/libs/crud-project-web.war')
		outputFile = file('build/output.log')
		timeout = 60000

		containerProperties {
		    property 'cargo.tomcat.ajp.port', 9099
		}
	    }
	}
}

project(':crud-project-ear'){
	apply plugin: 'ear'
}

project(':crud-project-resources'){
	apply plugin: 'war'
	dependencies {
	}
}

sonarqube {
    properties {
        property "sonar.sourceEncoding", "UTF-8"
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.5'
}
